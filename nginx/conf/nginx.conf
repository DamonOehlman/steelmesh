events {
  worker_connections  4096;
}

http {
    # Set cache dir
    proxy_cache_path /var/cache/nginx levels=1:2 keys_zone=microcache:5m max_size=512m;

    ## GZIP compression
    gzip on;
    # Use medium compression
    gzip_comp_level 5;
    # Compress static types
    gzip_types application-x/javascript text/javascript text/css;
    

    ## MIME types
    types {
      text/html                             html;
      text/css                              css;
      text/xml                              xml rss;
      image/gif                             gif;
      image/jpeg                            jpeg jpg;
      application/x-javascript              js;
      text/plain                            txt;
      image/png                             png;
      image/x-icon                          ico;
      application/pdf                       pdf;
      application/x-shockwave-flash         swf;
      application/x-x509-ca-cert            der pem crt;
      application/zip                       zip;
      audio/mpeg                            mp3;
      video/mpeg                            mpeg mpg;
      video/quicktime                       mov;
      video/x-flv                           flv;
      video/x-msvideo                       avi;
      video/x-ms-wmv                        wmv;
      video/x-ms-asf                        asx asf;
      video/x-mng                           mng;
    }

    server {
        listen          *:80;
        server_name     _;
        error_log       logs/error.log info;
        rewrite_log     on;
        # disable access log
        access_log      off;

        try_files       $uri $uri/index.html =404;
        root            ../html;
        
        # route known static types directly to couch
        location ~* \.\w+$ {
            ## ensure that only GET requests are proxied through to couch
            ## no remote putting, deleting thanks...
            if ($request_method != GET) {
              return 404;
            }
            
            # protect /lib, /node_modules and /app.js assets
            if ($uri ~* ^/\w+?/(lib|node_modules|app\.js)) {
                return 404;
            }
            
            if ($uri ~* \.html?$) {
                rewrite ^(/.*)\.html?$ $1 last;
            }
            
            ## proxy configuration
            proxy_pass http://127.0.0.1:3001;
            proxy_cache microcache;
            proxy_redirect off;
            # proxy buffering neees to be on for caching to work
            proxy_buffering on;
            # prevent "cache stampedes"
            proxy_cache_use_stale updating;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Send the cache headers for the browser
            expires 5m;
            add_header Cache-Control private; 
            
            ## rewrite rules
            rewrite ^/(.*)\/$ /$1/index.html last;
            # Use if passing to couch directly
            #rewrite ^/(.*\.+\w+$) /steelmesh/$1 break;
        }
        
        location / {
            proxy_pass http://127.0.0.1:3001/;
            proxy_redirect off;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;            
        }        
        
        # stack utilities interface
        location ^~ /_ {
            allow       127.0.0.1/32;
            deny        all;
        }
    }
}